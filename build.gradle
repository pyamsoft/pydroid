
/*
 * Copyright 2020 Peter Kenji Yamanaka
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
  ext {
    kotlin_version = '1.6.10'
    dokka_version = "1.6.0"
    agp_version = "7.0.4"
    compose_version = "1.0.5"
  }
  repositories {
    mavenLocal()
    google()
    mavenCentral()

    maven {
      url "https://plugins.gradle.org/m2/"
    }

    maven {
      url 'https://jitpack.io'
      content {
        includeGroup("com.github.pyamsoft")
      }
    }
  }

  ext {

    minSdk = 22
    maxSdk = 31

    // Compose
    composeActivity = "1.4.0"
    accompanist = "0.20.3"
    coil = "1.4.0"

    // Kotlin
    coroutines = '1.5.2'

    // AndroidX
    annotation = "1.3.0"
    core = "1.7.0"
    lifecycle = "2.4.0"
    fragment = "1.4.0"
    startup = "1.1.0"
    appCompat = "1.4.0"

    // Material Design
    materialDesign = "1.4.0"

    // Us
    cachify = "0.0.24"
    highlander = "0.0.19"

    // Network
    moshi = "1.12.0"
    retrofit = '2.9.0'
    okhttp = "4.9.3"

    // In app updates and reviews
    playCore = "1.10.2"
    playCoreKtx = "1.8.1"

    // In app billing
    playBilling = "4.0.0"

    // To remove in 25
    glide = '4.12.0'
    constraintLayout = "2.1.2"
    preference = "1.1.1"
    recyclerView = "1.2.1"
  }

  dependencies {
    classpath "com.android.tools.build:gradle:$agp_version"

    // Gradle version checker
    classpath 'com.github.ben-manes:gradle-versions-plugin:0.39.0'

    // Kotlin
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

    // Dokka
    classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"

    // Spotless
    classpath "com.diffplug.spotless:spotless-plugin-gradle:6.0.4"
  }
}

plugins {
  // Fix Android build cache
  // https://github.com/gradle/android-cache-fix-gradle-plugin
  id "org.gradle.android.cache-fix" version "2.4.5" apply false
}

subprojects {
  apply plugin: 'com.android.library'
  apply plugin: 'kotlin-android'
  apply plugin: 'kotlin-kapt'
  apply plugin: 'org.jetbrains.dokka'
  apply plugin: 'maven-publish'
  apply plugin: "org.gradle.android.cache-fix"

  final POM_GROUP = "com.github.pyamsoft.pydroid"
  final POM_VERSION = "24.3.1"


  // Kapt flags
  kapt {
    correctErrorTypes = true
    useBuildCache = true
    mapDiagnosticLocations = true

    javacOptions {
      option("-Xlint:unchecked")
      option("-Xlint:deprecation")
      option("-Xmaxerrs", 10000)
    }
  }

  android {
    compileSdkVersion rootProject.ext.maxSdk

    //noinspection GroovyMissingReturnStatement
    defaultConfig {
      minSdkVersion rootProject.ext.minSdk

      // For vector drawables
      vectorDrawables.useSupportLibrary = true

      // Consumer proguard file
      consumerProguardFiles "consumer-rules.pro"

      // Only English, I don't have any translations
      resConfigs "en"

      compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
      }

      kotlinOptions {
        jvmTarget = "11"
      }

    }

    buildTypes {
      debug {
        minifyEnabled false
        shrinkResources false
      }

      release {
        minifyEnabled false
        shrinkResources false
      }
    }

    buildFeatures {
      buildConfig false
    }
  }

  project.afterEvaluate {
    task androidSourcesJar(type: Jar) {
      archiveClassifier.convention('sources')
      archiveClassifier.set('sources')
      from android.sourceSets.main.java.source
    }

    task androidJavadocsJar(type: Jar, dependsOn: dokkaJavadoc) {
      archiveClassifier.convention('javadoc')
      archiveClassifier.set('javadoc')
      from "$buildDir/dokka"
    }

    artifacts {
      archives androidSourcesJar
      archives androidJavadocsJar
    }

    publishing {
      publications {
        PYDroid(MavenPublication) {
          artifact androidSourcesJar
          artifact androidJavadocsJar
          from project.components.release

          groupId POM_GROUP
          artifactId project.name
          version POM_VERSION
        }
      }
    }
  }
}

allprojects {
  apply plugin: "com.diffplug.spotless"
  apply plugin: 'com.github.ben-manes.versions'

  spotless {
    java {
      target "src/**/*.java"

      removeUnusedImports()
      trimTrailingWhitespace()
      endWithNewline()
      indentWithSpaces(2)
    }
    kotlin {
      target "src/**/*.kt"
      ktfmt()

      trimTrailingWhitespace()
      endWithNewline()
      indentWithSpaces(2)
    }
    groovyGradle {
      target "*.gradle"
      greclipse()

      trimTrailingWhitespace()
      endWithNewline()
      indentWithSpaces(2)
    }
  }

  def isNonStable = { version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
  }

  tasks.named("dependencyUpdates").configure {
    rejectVersionIf {
      isNonStable(it.candidate.version)
    }
  }

  repositories {
    mavenLocal()
    google()
    mavenCentral()

    maven {
      url "https://plugins.gradle.org/m2/"
    }

    maven {
      url 'https://jitpack.io'
      content {
        includeGroup("com.github.pyamsoft")
      }
    }
  }

  tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation'
    options.deprecation = true
  }
}
