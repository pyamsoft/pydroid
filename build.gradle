/*
 * Copyright 2020 Peter Kenji Yamanaka
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
	ext {
		kotlin_version = '1.4.10'
		dokka_version = "0.9.18"
	}
	repositories {
		mavenLocal()
		google()
		mavenCentral()
		jcenter()

		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}

	ext {

		minSdk = 22
		maxSdk = 30

		// Kotlin
		coroutines = '1.3.9'

		// AndroidX
		core = "1.3.1"
		constraintLayout = "2.0.1"
		lifecycle = "2.2.0"
		vectorDrawable = "1.1.0"
		preference = "1.1.1"
		recyclerView = "1.1.0"
		fragment = "1.2.5"
		appCompat = "1.2.0"
		swipeRefresh = "1.1.0"

		// Material Design
		materialDesign = "1.2.1"

		// Us
		cachify = "0.0.15"
		highlander = "0.0.13"

		// Network
		moshi = "1.10.0"
		retrofit = '2.9.0'
		okhttp = "4.9.0"

		// Logging
		timber = "4.7.1"

		// Image loading
		glide = '4.11.0'

		// Recyclerview
		decorator = "1.2.0"
	}

	dependencies {
		classpath "com.android.tools.build:gradle:4.0.1"

		// Gradle version checker
		classpath 'com.github.ben-manes:gradle-versions-plugin:0.29.0'

		// To publish
		classpath "com.github.dcendents:android-maven-gradle-plugin:2.1"
		classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.5"

		// Kotlin
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

		// Dokka
		classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:$dokka_version"

		// Spotless
		classpath "com.diffplug.spotless:spotless-plugin-gradle:5.5.2"
	}
}

subprojects {
	apply plugin: 'com.android.library'
	apply plugin: 'kotlin-android'
	apply plugin: 'kotlin-kapt'
	apply plugin: 'com.github.dcendents.android-maven'
	apply plugin: 'org.jetbrains.dokka-android'
	apply plugin: 'maven-publish'
	apply plugin: 'com.jfrog.bintray'

	final String POM_GROUP = "com.pyamsoft.pydroid"
	final String POM_VERSION = "22.0.4"

	group = POM_GROUP
	version = POM_VERSION

	task androidSourcesJar(type: Jar) {
		archiveClassifier.convention('sources')
		archiveClassifier.set('sources')
		from android.sourceSets.main.java.source
	}

	task androidJavadocsJar(type: Jar, dependsOn: dokka) {
		archiveClassifier.convention('javadoc')
		archiveClassifier.set('javadoc')
		from "$buildDir/dokka"
	}

	artifacts {
		archives androidSourcesJar
		archives androidJavadocsJar
	}

	// Kapt flags
	kapt {
		correctErrorTypes = true
		useBuildCache = true
		mapDiagnosticLocations = true

		javacOptions {
			option("-Xlint:unchecked")
			option("-Xlint:deprecation")
			option("-Xmaxerrs", 10000)
		}
	}

	android {
		compileSdkVersion rootProject.ext.maxSdk

		//noinspection GroovyMissingReturnStatement
		defaultConfig {
			minSdkVersion rootProject.ext.minSdk

			// For vector drawables
			vectorDrawables.useSupportLibrary = true

			// Consumer proguard file
			consumerProguardFiles "proguard-rules.pro"

			// Only English, I don't have any translations
			resConfigs "en"

			compileOptions {
				sourceCompatibility JavaVersion.VERSION_1_8
				targetCompatibility JavaVersion.VERSION_1_8
			}

			kotlinOptions {
				jvmTarget = "1.8"
			}

		}

		buildTypes {
			debug {
				minifyEnabled false
				shrinkResources false
			}

			release {
				minifyEnabled false
				shrinkResources false
				proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
			}
		}

		buildFeatures {
			viewBinding true
			buildConfig false
		}
	}

	project.afterEvaluate {
		publishing {
			publications {
				PYDroid(MavenPublication) {
					artifact bundleReleaseAar
					artifact androidSourcesJar
					artifact androidJavadocsJar
					groupId POM_GROUP
					artifactId project.name
					version POM_VERSION

					pom.withXml {
						def dependenciesNode = asNode().appendNode('dependencies')

						configurations.implementation.allDependencies.each {
							// Ensure dependencies such as fileTree are not included in the pom.
							if (it.name != 'unspecified') {
								def dependencyNode = dependenciesNode.appendNode('dependency')
								dependencyNode.appendNode('groupId', it.group)
								dependencyNode.appendNode('artifactId', it.name)
								dependencyNode.appendNode('version', it.version)
							}
						}
					}
				}
			}
		}
	}

	final String GITHUB_ROOT_URL = "https://github.com/pyamsoft/pydroid"
	bintray {
		user = 'pyamsoft'
		key = BINTRAY_API_KEY
		publications = ['PYDroid']
		override = true
		pkg {
			repo = 'PYDroid'
			name = project.name
			desc = "PYDroid library: ${project.name}"
			licenses = ['Apache-2.0']
			vcsUrl = "${GITHUB_ROOT_URL}/tree/main/${project.name}"
			websiteUrl = "${GITHUB_ROOT_URL}"
			version {
				name = POM_VERSION
				issueTrackerUrl = "${GITHUB_ROOT_URL}/issues"
				desc = "PYDroid library: ${project.name}"
				released = new Date()
				vcsTag = POM_VERSION
			}
		}
	}
}

allprojects {
	apply plugin: "com.diffplug.spotless"
	apply plugin: 'com.github.ben-manes.versions'

	spotless {
		java {
			target "src/**/*.java"
		}
		kotlin {
			target "src/**/*.kt"
			ktlint()
		}
		groovyGradle {
			target "*.gradle"
			greclipse()
		}
	}

	// Ignore non-release libraries
	dependencyUpdates.resolutionStrategy {
		componentSelection { rules ->
			rules.all { selection ->
				boolean rejected = [
					'alpha',
					'beta',
					'rc',
					'eap',
					'cr',
					'm',
					'preview'
				].any { qualifier ->
					selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
				}
				if (rejected) {
					selection.reject('Release candidate')
				}
			}
		}
	}

	repositories {
		mavenLocal()
		google()
		mavenCentral()
		jcenter()

		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}

	tasks.withType(JavaCompile) {
		options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation'
		options.deprecation = true
	}
}

